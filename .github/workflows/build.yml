name: SonarCloud .NET
on:
  push:
    branches: [ main, master ]
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ main, master ]

jobs:
  build:
    runs-on: windows-latest
    steps:
      # 1) NO JDK. Solo checkout con historial completo para análisis correcto
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2) .NET 9 SDK
      - name: Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      # 3) (Opcional) Cache del scanner en la carpeta .sonar/scanner como en tu snippet
      - name: Cache Sonar scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarScanner for .NET
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      # 4) BEGIN (usa variable de entorno; no pases /d:sonar.token vacío)
      - name: Sonar Begin
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin `
            /k:"Tavolordk_SIAU.Platform" `
            /o:"tavolordk" `
            /d:sonar.host.url="https://sonarcloud.io" `
            /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml"

      # 5) Restore + Build
      - name: Restore
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore -c Release

      # 6) Tests + cobertura (Coverlet -> opencover)
      - name: Test with coverage
        run: dotnet test --no-build -c Release `
             /p:CollectCoverage=true `
             /p:CoverletOutput=TestResults/coverage/ `
             /p:CoverletOutputFormat=opencover

      # 7) END (también con el token en env)
      - name: Sonar End
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: .\.sonar\scanner\dotnet-sonarscanner end
